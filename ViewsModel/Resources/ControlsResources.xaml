<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:extToolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:converters="clr-namespace:Jsa.ViewsModel.Converters" 
                    xmlns:p="clr-namespace:Jsa.ViewsModel.Properties">
  <converters:MaskLiteralsConverter x:Key="LiteralConverter" />
  <converters:MaskDateConverter x:Shared="False" x:Key="DateConverter" />
  <converters:OutboxNoConverter x:Shared="False" x:Key="OutboxConverter" />
  <converters:AddDateMaskConverter x:Shared="False" x:Key="AddMaskConverter" />
  <converters:OutboxConverter x:Shared="False"   x:Key="OpenOutboxConverter"/>
  <converters:StringTrimmingConverter x:Shared="False" x:Key="TrimmingConverter"/>
    <converters:BooleanOrConverter x:Shared="False" x:Key="BooleanOrConverter"/>
    <SolidColorBrush x:Key="PrimaryColor-Brush" Color="#FFFF9000" />
  <SolidColorBrush x:Key="ButtonBackground-Brush" Color="#FFB4B4B4" />
  <SolidColorBrush x:Key="Header-Brush" Color="#FF5E5E5E" />
  <SolidColorBrush x:Key="Focus-Brush" Color="#FF4B4B4B" />
  <SolidColorBrush x:Key="Border-Brush" Color="#FF9B9B9B" />
  <SolidColorBrush x:Key="Over-Brush" Color="#FFCACACA" />
  <SolidColorBrush x:Key="Background-Brush" Color="#FF7A7A7A" />
  <LinearGradientBrush x:Key="Brush_HeaderBackground" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Color="#66000088" Offset="0" />
    <GradientStop Color="#BB000088" Offset="1" />
  </LinearGradientBrush>
  <DataTemplate x:Key="EditMaskedCellTemplate">
        <extToolkit:MaskedTextBox Mask="## /##/ ####" AutoSelectBehavior="OnFocus" ValueDataType="{x:Type System:String}"
                             Value="{Binding Path=DateDue, UpdateSourceTrigger=PropertyChanged,
                             Converter={StaticResource LiteralConverter}}"
                             FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" />
  </DataTemplate>
    <DataTemplate x:Key="ShowMaskedCellTemplate">
        <TextBlock Text="{Binding Path=DateDue, UpdateSourceTrigger=PropertyChanged,
            Converter={StaticResource AddMaskConverter}}"/>
    </DataTemplate>
    <DataTemplate x:Key="ButtonCellTemplate">
        <Button Content="..." DataContext="{Binding RelativeSource={RelativeSource AncestorType=DataGrid, AncestorLevel=1, Mode=FindAncestor}, Path=DataContext}"
                Command="{Binding AddScheduleDetailsCommand}"/>
    </DataTemplate>
    <DataTemplate x:Key="ShowPaymentDateCellTemplate">
        <TextBlock Text="{Binding Path=PaymentDate,
            Converter={StaticResource AddMaskConverter}}"/>
    </DataTemplate>
  <Style x:Key="FocusedColumnHeader" TargetType="DataGridColumnHeader">
    <Setter Property="Background">
      <Setter.Value>
        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
          <GradientStop Color="#FFE5E2E0" Offset="0.138" />
          <GradientStop Color="#FFF6792F" Offset="1" />
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>

  </Style>
  <Style x:Key="NonFocusedColumnHeader" TargetType="DataGridColumnHeader">
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrush}}" />
  </Style>
  <Style x:Key="FocusedRowHeader" TargetType="DataGridRowHeader">
    <Setter Property="Background">
      <Setter.Value>
        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
          <GradientStop Color="#FFE5E2E0" Offset="0.138" />
          <GradientStop Color="#FFF6792F" Offset="1" />
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>

  </Style>
  <Style x:Key="NonFocusedRowHeader" TargetType="DataGridRowHeader">
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrush}}" />
  </Style>

  <DataTemplate x:Key="RegistrationMaskedCell">
        <extToolkit:MaskedTextBox IncludeLiteralsInValue="False" Mask="## /##/ ####" ValueDataType="{x:Type System:String}"
                               Value="{Binding Path=RegistredAt, Converter={StaticResource DateConverter}}" />
  </DataTemplate>
  <DataTemplate x:Key="DateDueMaskedCell">
        <extToolkit:MaskedTextBox IncludeLiteralsInValue="False" Mask="## /##/ ####" ValueDataType="{x:Type System:String}"
                               Value="{Binding Path=DateDue, Converter={StaticResource DateConverter}}" />
  </DataTemplate>

  <Style x:Key="DialogFocusStyle" TargetType="Border">
    <Setter Property="Background">
      <Setter.Value>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
          <GradientStop Color="#FFACC4D6" Offset="0.964" />
          <GradientStop Color="White" Offset="0.023" />
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>

  </Style>

    <Style x:Key="WindowCommonStyle" TargetType="Window"  BasedOn="{StaticResource {x:Type Window}}">
        <Setter Property="FontFamily" Value="Simplified Arabic"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FlowDirection" Value="RightToLeft"/>
        <Setter Property="Language" Value="ar-SA"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>
    <ControlTemplate x:Key="TextBoxErrorTemplate">
        <StackPanel Orientation="Horizontal">
            <Border BorderThickness="1" BorderBrush="#FFdc000c" CornerRadius="0.7"
                VerticalAlignment="Top">
                <Grid>
                    <Polygon x:Name="toolTipCorner"
                         Grid.ZIndex="2"
                         Margin="-1"
                         Points="6,6 6,0 0,0" 
                         Fill="#FFdc000c" 
                         HorizontalAlignment="Right" 
                         VerticalAlignment="Top"
                         IsHitTestVisible="True"/>
                    <Polyline Grid.ZIndex="3"
                          Points="7,7 0,0" Margin="-1" HorizontalAlignment="Right" 
                          StrokeThickness="1.5"
                          StrokeEndLineCap="Round"
                          StrokeStartLineCap="Round"
                          Stroke="White"
                          VerticalAlignment="Top"
                          IsHitTestVisible="True"/>
                    <AdornedElementPlaceholder x:Name="adorner"/>
                </Grid>
            </Border>
            <Border x:Name="errorBorder" Background="#FFdc000c" Margin="1,0,0,0"
                Opacity="0" CornerRadius="1.5"
                IsHitTestVisible="False"
                MinHeight="24" MaxWidth="267">
                <Border.Effect>
                    <DropShadowEffect ShadowDepth="2.25" 
                                  Color="Black" 
                                  Opacity="0.4"
                                  Direction="315"
                                  BlurRadius="4"/>
                </Border.Effect>
                <TextBlock Text="{Binding ElementName=adorner,
                                      Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
                       Foreground="White" Margin="8,3,8,3" TextWrapping="Wrap"/>
            </Border>
        </StackPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Value="True">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource BooleanOrConverter}">
                        <Binding ElementName="adorner" Path="AdornedElement.IsKeyboardFocused" />
                        <Binding ElementName="toolTipCorner" Path="IsMouseOver"/>
                    </MultiBinding>
                </DataTrigger.Binding>
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="fadeInStoryboard">
                        <Storyboard>
                            <DoubleAnimation Duration="00:00:00.15"
                                         Storyboard.TargetName="errorBorder"
                                         Storyboard.TargetProperty="Opacity"
                                         To="1"/>
                            <ThicknessAnimation Duration="00:00:00.15"
                                            Storyboard.TargetName="errorBorder"
                                            Storyboard.TargetProperty="Margin"
                                            FillBehavior="HoldEnd"
                                            From="1,0,0,0"
                                            To="5,0,0,0">
                                <ThicknessAnimation.EasingFunction>
                                    <BackEase EasingMode="EaseOut" Amplitude="2"/>
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="fadeInStoryboard"/>
                    <BeginStoryboard x:Name="fadeOutStoryBoard">
                        <Storyboard>
                            <DoubleAnimation Duration="00:00:00"
                                         Storyboard.TargetName="errorBorder"
                                         Storyboard.TargetProperty="Opacity"
                                         To="0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
   

</ResourceDictionary>